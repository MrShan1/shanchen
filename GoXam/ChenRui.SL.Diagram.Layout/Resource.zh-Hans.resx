<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Aggressive" xml:space="preserve">
    <value>活跃</value>
  </data>
  <data name="AngelSpeed" xml:space="preserve">
    <value>角度增速</value>
  </data>
  <data name="Angle" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="AngleRange" xml:space="preserve">
    <value>角度范围</value>
  </data>
  <data name="ArcSpacingRatio" xml:space="preserve">
    <value>弧间距比率</value>
  </data>
  <data name="AspectRatio" xml:space="preserve">
    <value>长短轴比</value>
  </data>
  <data name="Bottom" xml:space="preserve">
    <value>下</value>
  </data>
  <data name="CenterNode" xml:space="preserve">
    <value>中间点</value>
  </data>
  <data name="CenterNodeDistance" xml:space="preserve">
    <value>中心点距离</value>
  </data>
  <data name="CenterNodeDistanceRatio" xml:space="preserve">
    <value>中心距离比</value>
  </data>
  <data name="CenterNodePlacement" xml:space="preserve">
    <value>中心点位置</value>
  </data>
  <data name="CenterNodeType" xml:space="preserve">
    <value>中心点类型</value>
  </data>
  <data name="CircleSpacingRatio" xml:space="preserve">
    <value>圈间距比</value>
  </data>
  <data name="ColumnCount" xml:space="preserve">
    <value>列数</value>
  </data>
  <data name="ColumnSpacing" xml:space="preserve">
    <value>列间距</value>
  </data>
  <data name="DepthFirstIn" xml:space="preserve">
    <value>深度第一进</value>
  </data>
  <data name="DepthFirstOut" xml:space="preserve">
    <value>深度第一出</value>
  </data>
  <data name="Direction" xml:space="preserve">
    <value>方向</value>
  </data>
  <data name="Distance" xml:space="preserve">
    <value>距离</value>
  </data>
  <data name="ElectricalCharge" xml:space="preserve">
    <value>电荷</value>
  </data>
  <data name="FirstCircleFixRadius" xml:space="preserve">
    <value>首圈定半径</value>
  </data>
  <data name="FirstCircleNodeCount" xml:space="preserve">
    <value>首圈节点数</value>
  </data>
  <data name="FirstCircleRadius" xml:space="preserve">
    <value>首圈半径</value>
  </data>
  <data name="FirstCircleRadiusRatio" xml:space="preserve">
    <value>首圈半径比</value>
  </data>
  <data name="FirstNode" xml:space="preserve">
    <value>第一个点</value>
  </data>
  <data name="FixColumnCount" xml:space="preserve">
    <value>固定列数</value>
  </data>
  <data name="FixRadius" xml:space="preserve">
    <value>固定半径</value>
  </data>
  <data name="FixRowCount" xml:space="preserve">
    <value>固定行数</value>
  </data>
  <data name="GroupPadding" xml:space="preserve">
    <value>组的内边距</value>
  </data>
  <data name="HorizontalSpacing" xml:space="preserve">
    <value>水平间距</value>
  </data>
  <data name="Initialize" xml:space="preserve">
    <value>初始化</value>
  </data>
  <data name="IsCenterNodeLeft" xml:space="preserve">
    <value>左边中心点</value>
  </data>
  <data name="IsCenterNodeTop" xml:space="preserve">
    <value>上边中心点</value>
  </data>
  <data name="IsClockwise" xml:space="preserve">
    <value>是否顺时针</value>
  </data>
  <data name="IsContinuous" xml:space="preserve">
    <value>是否连续</value>
  </data>
  <data name="LastNode" xml:space="preserve">
    <value>最后一个点</value>
  </data>
  <data name="Layering" xml:space="preserve">
    <value>分层</value>
  </data>
  <data name="LayerSpacing" xml:space="preserve">
    <value>层间距</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>左</value>
  </data>
  <data name="Less" xml:space="preserve">
    <value>更少</value>
  </data>
  <data name="LongestPathSink" xml:space="preserve">
    <value>最长路径下沉</value>
  </data>
  <data name="LongestPathSource" xml:space="preserve">
    <value>最长路径源</value>
  </data>
  <data name="MaxLinkCountNode" xml:space="preserve">
    <value>最大链接数点</value>
  </data>
  <data name="More" xml:space="preserve">
    <value>更多</value>
  </data>
  <data name="Naive" xml:space="preserve">
    <value>本地</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="OptimalLinkLength" xml:space="preserve">
    <value>优化链接长</value>
  </data>
  <data name="PackExpand" xml:space="preserve">
    <value>包展开</value>
  </data>
  <data name="PackMedian" xml:space="preserve">
    <value>包中</value>
  </data>
  <data name="PackStraighten" xml:space="preserve">
    <value>包直</value>
  </data>
  <data name="Radius" xml:space="preserve">
    <value>半径</value>
  </data>
  <data name="RadiusInit" xml:space="preserve">
    <value>初始半径增速</value>
  </data>
  <data name="RadiusPow" xml:space="preserve">
    <value>半径增速指数</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>右</value>
  </data>
  <data name="RowCount" xml:space="preserve">
    <value>行数</value>
  </data>
  <data name="SpringLength" xml:space="preserve">
    <value>弹簧长</value>
  </data>
  <data name="SpringStiffness" xml:space="preserve">
    <value>弹簧硬度</value>
  </data>
  <data name="StartAngle" xml:space="preserve">
    <value>起始角度</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>上</value>
  </data>
  <data name="VerticalSpacing" xml:space="preserve">
    <value>垂直间距</value>
  </data>
  <data name="Ascending" xml:space="preserve">
    <value>升序</value>
  </data>
  <data name="Block" xml:space="preserve">
    <value>块</value>
  </data>
  <data name="BottomRightBus" xml:space="preserve">
    <value>右下总线</value>
  </data>
  <data name="Bus" xml:space="preserve">
    <value>总线</value>
  </data>
  <data name="CenterChildren" xml:space="preserve">
    <value>子中心</value>
  </data>
  <data name="CenterSubtrees" xml:space="preserve">
    <value>子树中心</value>
  </data>
  <data name="Descending" xml:space="preserve">
    <value>降序</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="Forwards" xml:space="preserve">
    <value>向前</value>
  </data>
  <data name="Reverse" xml:space="preserve">
    <value>反转</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="TopLeftBus" xml:space="preserve">
    <value>左上总线</value>
  </data>
  <data name="Alignment" xml:space="preserve">
    <value>对齐</value>
  </data>
  <data name="BreadthLimit" xml:space="preserve">
    <value>宽度限制</value>
  </data>
  <data name="Compaction" xml:space="preserve">
    <value>紧密</value>
  </data>
  <data name="LayerSpacingParentOverlap" xml:space="preserve">
    <value>父重叠</value>
  </data>
  <data name="NodeIndent" xml:space="preserve">
    <value>节点缩进</value>
  </data>
  <data name="NodeIndentPastParent" xml:space="preserve">
    <value>缩进过父</value>
  </data>
  <data name="NodeSpacing" xml:space="preserve">
    <value>节点间距</value>
  </data>
  <data name="RowIndent" xml:space="preserve">
    <value>行缩进</value>
  </data>
  <data name="RowSpacing" xml:space="preserve">
    <value>行间距</value>
  </data>
  <data name="Sorting" xml:space="preserve">
    <value>排序</value>
  </data>
  <data name="Alternating" xml:space="preserve">
    <value>交替的</value>
  </data>
  <data name="LastParents" xml:space="preserve">
    <value>最后父</value>
  </data>
  <data name="Layered" xml:space="preserve">
    <value>分层</value>
  </data>
  <data name="RootOnly" xml:space="preserve">
    <value>仅仅根</value>
  </data>
  <data name="TreeStyle" xml:space="preserve">
    <value>树样式</value>
  </data>
</root>